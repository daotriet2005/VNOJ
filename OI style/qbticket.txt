#include <bits/stdc++.h>
#pragma GCC optimize("O3")
using namespace std;
typedef long long int ll;
typedef pair<ll,ll> data;
typedef pair<int, pair<int, int> > pii;
#define forw(i,a,b) for (ll i=a;i<=b;i++)
#define forb(i,a,b) for (ll i=a;i>=b;i--)
#define fast {ios::sync_with_stdio(false); cin.tie(0); }
#define fi first
#define se second
#define pu push
#define puf push_front
#define pb push_back
#define pof pop_front
#define pob pop_back
#define fr front
#define all(a) a.begin(),a.end()
const ll oo=1e18;
const ll mod=1e9+7;
const ll maxN=1e5+5;
const int tx[4]={0,0,1,-1};
const int ty[4]={1,-1,0,0};
const ll base=31;
ll dp[maxN],n,a[maxN],l1,l2,l3,c1,c2,c3,s,t;;
void solve()
{
    cin>>l1>>l2>>l3>>c1>>c2>>c3;
    cin>>n;
    cin>>s>>t;
    forw(i,2,n)
        cin>>a[i];
    forw(i,s+1,n)
    {
        int pos;
        dp[i]=oo;
        //////////////////////
        pos=lower_bound(a+1,a+i,a[i]-l1)-a;
        if (pos<s) pos=s;
        dp[i]=min(dp[i],dp[pos]+c1);
        //////////////////////
        pos=lower_bound(a+1,a+i,a[i]-l2)-a;
        if (pos<s) pos=s;
        dp[i]=min(dp[i],dp[pos]+c2);
        //////////////////////
        pos=lower_bound(a+1,a+i,a[i]-l3)-a;
        if (pos<s) pos=s;
        dp[i]=min(dp[i],dp[pos]+c3);
    }
    cout<<dp[t];
}
int main()
{
    fast;
    //freopen("test.inp","r",stdin);
    //freopen("test.out","w",stdout);
    ll t=1; //cin>>t;
    while (t--) solve();
    return 0;
}