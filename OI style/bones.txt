//http://wolfriscodingpracticediary.blogspot.com/2018/07/voj-cutseqs.html
#include <bits/stdc++.h>
#pragma GCC optimize("O3")
using namespace std;
typedef long long int ll;
typedef pair<ll,ll> data;
#define forw(i,a,b) for (ll i=a;i<=b;i++)
#define forb(i,a,b) for (ll i=a;i>=b;i--)
#define fast {ios::sync_with_stdio(false); cin.tie(0); }
#define fi first
#define se second
#define pu push
#define puf push_front
#define pb push_back
#define pof pop_front
#define pob pop_back
#define fr front
#define all(a) a.begin(),a.end()
const ll oo=1e18;
const ll mod=5000000;
const ll maxN=1e5+5;
const int tx[4]={0,0,1,-1};
const int ty[4]={1,-1,0,1};
const ll base=31;
const int maxd=10000;
const int limit=1e5+1;
ll s1,s2,s3,out,ans;
map<int,int> save;
void solve()
{
    cin>>s1>>s2>>s3;
    forw(i,1,s1)
        forw(j,1,s2)
            forw(k,1,s3)
            {
                save[i+j+k]++;
                if (save[i+j+k]>ans)
                {
                    ans=save[i+j+k];
                    out=i+j+k;
                }
                else
                    if (save[i+j+k]==ans && i+j+k<out) out=i+j+k;
            }
    cout<<out;

}
int main()
{
    fast;
    //freopen("test.inp","r",stdin);
    //freopen("test.out","w",stdout);
    ll t=1; //cin>>t;
    while (t--) solve();
    return 0;
}